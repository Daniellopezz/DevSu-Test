apiVersion: apps/v1
kind: Deployment
metadata:
  name: devsu-demo-app
  labels:
    app: devsu-demo-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: devsu-demo-app
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: devsu-demo-app
    spec:
      containers:
      - name: devsu-demo-app
        image: ${DOCKER_REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG}
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "200m"
            memory: "256Mi"
        envFrom:
        - configMapRef:
            name: devsu-demo-config
        - secretRef:
            name: devsu-demo-secrets
        livenessProbe:
          httpGet:
            path: /health/
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
      securityContext:
        fsGroup: 1000

--- 

apiVersion: v1
kind: Service
metadata:
  name: devsu-demo-app
  namespace: devsu-demo
  labels:
    app: devsu-demo-app
spec:
  selector:
    app: devsu-demo-app
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  type: ClusterIP